---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-production
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: basic-ocena-auth
    nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required - ocena'
    nginx.ingress.kubernetes.io/enable-cors: "true"
    # Cache Configurations
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    nginx.ingress.kubernetes.io/configuration-snippet: |-
      proxy_cache app_cache;
      proxy_cache_valid any 60m;
      proxy_cache_valid 500 501 502 503 504 0m;
      proxy_cache_use_stale error timeout updating http_502 http_503 http_504;
      proxy_cache_lock on;
      proxy_ignore_headers Cache-Control;
      add_header X-Cache-Status $upstream_cache_status;
    # Rate Limiting per IP Address
    nginx.ingress.kubernetes.io/limit-connections: "5"
    nginx.ingress.kubernetes.io/limit-rpm: "30" # maximum of 30 requests per minute for a single IP
  name: ocena
spec:
  ingressClassName: nginx
  rules:
  - host: ocena.gophie.cam
    http:
      paths:
      - pathType: ImplementationSpecific
        path: /
        backend:
          service:
            name: ocena
            port:
              number: 80
  tls:
  - hosts:
    - ocena.gophie.cam
    secretName: ocena-gophie-cam-tls


